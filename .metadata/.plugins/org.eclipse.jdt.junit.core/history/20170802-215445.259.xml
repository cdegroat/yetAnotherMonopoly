<?xml version="1.0" encoding="UTF-8"?><testrun name="Rerun tests.TestGame" project="MonopolyGame" tests="25" started="25" failures="0" errors="1" ignored="0">
  <testsuite name="tests.TestGame" time="0.001">
    <testcase name="landsOnNothingSpecial" classname="tests.TestGame" time="0.001"/>
    <testcase name="passOverProperty" classname="tests.TestGame" time="0.0"/>
    <testcase name="play20Rounds" classname="tests.TestGame" time="0.0"/>
    <testcase name="landOnGo" classname="tests.TestGame" time="0.0"/>
    <testcase name="startsOnGo" classname="tests.TestGame" time="0.0"/>
    <testcase name="testRoll7" classname="tests.TestGame" time="0.0"/>
    <testcase name="playerLandsIncomeTax1800" classname="tests.TestGame" time="0.0"/>
    <testcase name="playerLandsIncomeTax2000" classname="tests.TestGame" time="0.0"/>
    <testcase name="playerLandsIncomeTax2200" classname="tests.TestGame" time="0.0"/>
    <testcase name="buysProperty" classname="tests.TestGame" time="0.0"/>
    <testcase name="validatePlayers" classname="tests.TestGame" time="0.0"/>
    <testcase name="movesPastGo" classname="tests.TestGame" time="0.0"/>
    <testcase name="playerPassesOverIncomeTax" classname="tests.TestGame" time="0.0"/>
    <testcase name="testRollLate" classname="tests.TestGame" time="0.0"/>
    <testcase name="landsOnJustVisiting" classname="tests.TestGame" time="0.0"/>
    <testcase name="landOnOtherPlayersProperty" classname="tests.TestGame" time="0.0"/>
    <testcase name="passesJail" classname="tests.TestGame" time="0.0"/>
    <testcase name="playerPassesLuxuryTax" classname="tests.TestGame" time="0.0"/>
    <testcase name="playerLandsIncomeTax0" classname="tests.TestGame" time="0.0"/>
    <testcase name="landOnOwnProperty" classname="tests.TestGame" time="0.0"/>
    <testcase name="landOnRailroad" classname="tests.TestGame" time="0.0">
      <error>java.lang.NullPointerException&#13;
	at game.squares.Railroad.getChargeAmount(Railroad.java:13)&#13;
	at tests.TestGame.landOnRailroad(TestGame.java:379)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</error>
    </testcase>
    <testcase name="play20RoundsVerifyPlayerIntegrity" classname="tests.TestGame" time="0.0"/>
    <testcase name="createGameTwoPlayers" classname="tests.TestGame" time="0.0"/>
    <testcase name="playerLandsLuxuryTax" classname="tests.TestGame" time="0.0"/>
    <testcase name="passesGoTwice" classname="tests.TestGame" time="0.0"/>
  </testsuite>
</testrun>
